image: node:lts

variables:
  TIMEZONE: "Europe/Berlin"


stages:
  - test
  - deployment

pages:
  variables:
    GIT_STRATEGY: clone
  stage: deployment
  script:
    - npm ci
    - FORCE_SHOW_EDIT_PAGE_LINK=true CI=true npm run documentation
    - mv build/docs public
  artifacts:
    paths:
      - public


test:
  image: ubuntu:latest
  stage: test
  tags:
    - testing
  script:
    - sh -c 'echo "127.0.0.11 proxy.local\n" >> /etc/hosts'
    - apt update -yy
    - apt install -yy curl  ca-certificates   sudo  gnupg     lsb-release
    - mkdir -p /etc/apt/keyrings
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt update -yy
    - apt install -yy docker-ce docker-ce-cli containerd.io docker-compose-plugin
    - curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash
    - export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
    - nvm install 16 && nvm use 16 && nvm alias default 16
    - npm install -g npm@latest
    - npm ci
    - set -x
    - docker compose -f deployments/testing/docker-compose.yml up -d
    - set -x
    - sleep 60
    - npm test

